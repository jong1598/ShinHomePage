{"version":3,"sources":["code/Component/ShinButton.js","code/Library/DataFunction.js","code/Main/Header.js","code/Main/Main.js","app/App.js","index.js","Image/logo.png","Image/gitLogo.png"],"names":["ShinButton","props","onClick","onMouseEnter","setState","isHover","onMouseLeave","state","this","style","hoverStyle","labelStyle","label","href","labelComponent","buttonStyle","ref","PureComponent","IsNullOrEmpty","str","isEmpty","isUndefined","Infinity","trim","Header","inner_props","selected_Index","createButton","buttons","src","buttonComponents","i","length","index","undefined","toString","borderBottomColor","background","push","createGitLink","gitLinkComponents","gitLogo","display","textAlign","verticalAlign","boxSizing","cursor","outline","position","borderRadius","borderWidth","borderStyle","borderTopColor","borderRightColor","borderLeftColor","color","textDecoration","height","fontFamily","fontSize","lineHeight","padding","textTransform","className","logo","Main","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0d2e92a4.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\n\nclass ShinButton extends PureComponent {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isHover: false  //Hover상태값\n        }\n    }\n\n    /**\n     * 버튼 클릭시 이벤트\n     */\n    onClick = () => {\n        if(this.props.onClick){\n            this.props.onClick(this.props)\n        }\n    }\n\n    /**\n     * 버튼 위로 마우스커서가 들어왔을때\n     */\n    onMouseEnter = () => {\n        this.setState({ isHover: true })\n    }\n\n    /**\n     * 버튼 위에서 마우스커서가 나갔을때\n     */\n    onMouseLeave = () => {\n        this.setState({ isHover: false })\n    }\n\n\n    render() {\n\n        const {\n            style,\n            hoverStyle,\n            labelStyle,\n            label,\n            href,\n        } = this.props\n\n        const { isHover } = this.state\n\n\n        let labelComponent = label ? <span style={labelStyle}>{label}</span> : ''\n\n        let buttonStyle = isHover ? hoverStyle : style\n\n        return (\n            href ? <a\n                style={buttonStyle}\n                href={href}\n                ref='button'\n                onClick={this.onClick}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}>\n                {labelComponent}\n            </a> :\n                <button\n                    ref='button'\n                    style={buttonStyle}\n                    onClick={this.onClick}\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}>\n                    {labelComponent}\n                </button>\n        )\n    }\n}\nexport default ShinButton","\nimport { isUndefined } from 'util';\n\nexport const ToNumber = val => {\n    let rtnVal = 0;\n    rtnVal = Number(val);\n    if (isNaN(rtnVal) || rtnVal == undefined || rtnVal == \"\" || rtnVal == Infinity || rtnVal == -Infinity) {\n        rtnVal = 0;\n    }\n\n    return rtnVal;\n};\n\nexport const ToString = src => {\n    let rtn = \"\"\n\n    if (src === null || src === undefined || src === \"\" || src === \"null\") {\n        rtn = \"\";\n    } else {\n        rtn = src.toString();\n    }\n\n    return rtn;\n};\n\nexport const IsNullOrEmpty = str => {\n    let isEmpty = false\n    if (isUndefined(str) || str === \"\" || str === Infinity || str === null || str === 'null' || str === \"undefined\") {\n        isEmpty = true\n    } else if (typeof (str) === 'string' && str.trim() === \"\") {\n        isEmpty = true\n    }\n\n    return isEmpty\n}\n\n/**\n *\n * 사용법\n * SortArray(array,'mn_4','desc')  array -> 객체를 배열로 가지고 있을때\n * SortArray(array,null,'desc')    array -> 값을 배열로 가지고 있을때\n * @param {정렬할 배열} array\n * @param {객체 비교시 구분값(컬럼)} gubun\n * @param {정렬 방식} type\n */\nexport const SortArray = (array, gubun, type) => {\n    if (!IsNullOrEmpty(gubun)) {\n        if (type === 'desc') {\n            for (let i = 0; i < array.length; i++) {\n                for (let j = 0; j < array.length - (i + 1); j++) {\n                    if (array[j][gubun] < array[j + 1][gubun]) {\n                        let tmp = array[j + 1]\n                        array[j + 1] = array[j]\n                        array[j] = tmp\n                    }\n                }\n            }\n        } else if (type === 'asc') {\n            for (let i = 0; i < array.length; i++) {\n                for (let j = 0; j < array.length - (i + 1); j++) {\n                    if (array[j][gubun] > array[j + 1][gubun]) {\n                        let tmp = array[j + 1]\n                        array[j + 1] = array[j]\n                        array[j] = tmp\n                    }\n                }\n            }\n        }\n    } else {\n        if (type === 'desc') {\n            for (let i = 0; i < array.length; i++) {\n                for (let j = 0; j < array.length - (i + 1); j++) {\n                    if (array[j] < array[j + 1]) {\n                        let tmp = array[j + 1]\n                        array[j + 1] = array[j]\n                        array[j] = tmp\n                    }\n                }\n            }\n        } else if (type === 'asc') {\n            for (let i = 0; i < array.length; i++) {\n                for (let j = 0; j < array.length - (i + 1); j++) {\n                    if (array[j] > array[j + 1]) {\n                        let tmp = array[j + 1]\n                        array[j + 1] = array[j]\n                        array[j] = tmp\n                    }\n                }\n            }\n        }\n    }\n\n    return array\n}","import React, {PureComponent} from 'react';\nimport logo from '../../Image/logo.png';\nimport gitLogo from '../../Image/gitLogo.png';\nimport {ShinButton} from '../Component'\nimport { ToString, IsNullOrEmpty } from '../Library/DataFunction';\n\nclass Header extends PureComponent {\n\n    constructor(props) {\n        super(props)\n\n        this.buttonStyle = {\n            boxSizing:\"border-box\",\n            cursor: \"pointer\",\n            display:\"inline-block\",\n            outline: \"none\",\n            position:\"relative\",\n            textAlign:\"center\",\n            verticalAlign:\"top\",\n            borderRadius:'0px',\n            borderWidth:'0px 0px 3px',\n            borderStyle:'none none solid',\n            borderTopColor: \"initial\",\n            borderRightColor:\"initial\", \n            borderBottomColor:'transparent',      //rgb(86,86,86)\n            borderLeftColor:\"initial\",\n            background: \"transparent\",\n            color: \"rgb(74, 74, 74)\",\n            textDecoration: \"none\",\n            height:\"60px\"\n        }\n\n        this.labelStyle = {\n            fontFamily: \"Nanum Square\",\n            fontSize:'18px',\n            lineHeight:'60px',\n            padding: '0px 16px',\n            textTransform: 'uppercase'\n        }\n\n        this.state = {\n            selected_Index: ''\n        }\n    }\n\n    onClick = (inner_props) => {\n        if(!IsNullOrEmpty(inner_props['index'])){\n            this.setState({ selected_Index: inner_props['index'] })\n        }\n    }\n\n    createButton = (buttons) => {\n\n        let buttonComponents = []\n\n        for(let i = 0; i < buttons.length; i++){\n            let index = ToString(i)\n            let style = this.buttonStyle\n            if(index === this.state.selected_Index){\n                style = { ...style, borderBottomColor: 'rgb(86,86,86)' }\n            }\n            let hoverStyle = { ...style, background: 'rgb(246,237,237)' }\n            let labelStyle = this.labelStyle\n            buttonComponents.push(<ShinButton href={buttons[i]['href']} index={index} style={style} hoverStyle={hoverStyle} labelStyle={labelStyle} label={buttons[i]['label']} onClick={this.onClick} />)\n        }\n        return buttonComponents\n    }\n\n    \n    createGitLink = () => {\n        let gitLinkComponents = []\n        gitLinkComponents.push(     //링크\n            <a href={\"https://github.com/jong1598/ShinHomePage\"} style={{...this.buttonStyle, 'height': '38px'}}>\n                <img src={gitLogo} style={{ display: 'inline-block', 'height': '38px', 'width': '38px', textAlign: 'center', verticalAlign: 'middle' }} />\n            </a>\n        )\n\n        return gitLinkComponents\n    }\n\n    render() {\n        const { buttons } = this.props\n\n\n        let buttonComponents = this.createButton(buttons)\n        let gitLinkComponents = this.createGitLink()\n\n        return (\n            <header className=\"Main-Header\">\n                <img className=\"Main-Header-Logo\" src={logo} />\n                <h1 className=\"Main-Header-Text\"><a href=\"#/Main\">SHIN</a></h1>\n                <div className=\"Main-Header-Menu\" >{buttonComponents}</div>\n                <div className=\"Main-Header-GitLink\">{gitLinkComponents}</div>\n            </header>\n        )\n    }\n}\n\nexport default Header","import React, {PureComponent} from 'react';\nimport Header from './Header'\n\nclass Main extends PureComponent {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n        }\n    }\n\n    onClick = (selected_Index) => {\n        this.setState({selected_Index})\n    }\n\n    render() {\n        let headerMenus = [\n            {label:'메뉴1', href:'/#/menu1'},\n            {label:'메뉴2', href:'/#/menu2'},\n            {label:'메뉴3', href:'/#/menu3'},\n            {label:'메뉴4', href:'/#/menu4'},\n            {label:'메뉴5', href:'/#/menu5'},\n            {label:'메뉴6', href:'/#/menu6'},\n            {label:'메뉴7', href:'/#/menu7'},\n        ]\n\n        return (\n            <div className=\"App\">\n                <div className='Main'>\n                    <Header buttons={headerMenus}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Main","import React from 'react';\nimport './Total.css';\nimport './Component.css';\nimport Main from '../code/Main/Main'\n\nfunction App() {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.3b135343.png\";","module.exports = __webpack_public_path__ + \"static/media/gitLogo.4fcf6a58.png\";"],"sourceRoot":""}